{"version":3,"sources":["redux/store.js","api/api.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Loader/Loader.jsx","components/FindMovie/FindMovie.jsx","components/FilterMovie/FilterMovie.jsx","components/Pagination/Pagination.jsx","App.jsx","index.js"],"names":["intialState","movies","loading","currentPage","moviesPerPage","totalMovies","selectors","state","actions","type","movie","imdbId","query","pageNumber","payload","store","createStore","action","length","filter","title","toLowerCase","includes","description","composeWithDevTools","getMovie","fetch","then","response","json","defaultMovies","data","console","log","MovieCard","imgUrl","imdbUrl","useState","details","setDetails","dispatch","useDispatch","className","CN","src","alt","href","onClick","MoviesList","map","key","Loader","FindMovie","addMovie","setLoading","searchTitle","setSearchTitle","foundMovie","setFoundMovie","notFound","setNotFound","showPreview","setShowPreview","canAddMovie","setCanAddMovie","searchMovie","a","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","autoComplete","htmlFor","id","placeholder","finder__input","value","onChange","target","disabled","FilterMovie","filterMovies","setQuery","useEffect","Pagination","paginate","useSelector","pageNumbers","i","Math","ceil","push","page","App","fetchMovies","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb90bec9.chunk.js","sourcesContent":["import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst intialState = {\n  movies: [],\n  loading: true,\n  currentPage: 1,\n  moviesPerPage: 5,\n  totalMovies: 0,\n};\n\nexport const selectors = {\n  getMovies: state => state.movies,\n  getLoading: state => state.loading,\n  getCurrentPage: state => state.currentPage,\n  getMoviesPerPage: state => state.moviesPerPage,\n  getTotalMovies: state => state.totalMovies,\n}\n\nconst SET_MOVIES = 'SET_MOVIES';\nconst ADD_MOVIE = 'ADD_MOVIE';\nconst DELETE_MOVIE = 'DELETE_MOVIE';\nconst FILTER_MOVIES = 'FILTER_MOVIES';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_LOADING = 'SET_LOADING';\n\nexport const actions = {\n  setMovies: (movies) => ({\n    type: SET_MOVIES,\n    movies,\n  }),\n\n  addMovie: (movie) => ({\n    type: ADD_MOVIE,\n    movie,\n  }),\n\n  deleteMovie: (imdbId) => ({\n    type: DELETE_MOVIE,\n    imdbId,\n  }),\n\n  filterMovies: (query) => ({\n    type: FILTER_MOVIES,\n    query,\n  }),\n\n  setCurrentPage: (pageNumber) => ({\n    type: SET_CURRENT_PAGE,\n    pageNumber,\n  }),\n\n  setLoading: (payload) => ({\n    type: SET_LOADING,\n    payload,\n  }),\n};\n\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case SET_MOVIES:\n      return {\n        ...state,\n        movies: action.movies,\n        totalMovies: action.movies.length,\n      };\n\n    case ADD_MOVIE:\n      return {\n        ...state,\n        movies: [action.movie, ...state.movies],\n        totalMovies: state.totalMovies += 1,\n      };\n\n    case DELETE_MOVIE:\n      return {\n        ...state,\n        movies: state.movies\n          .filter(movie => movie.imdbId !== action.imdbId),\n        totalMovies: state.totalMovies -= 1,\n      };\n\n    case FILTER_MOVIES:\n      return {\n        ...state,\n        movies: state.movies\n          .filter(movie => (movie.title.toLowerCase()\n            .includes(action.query)\n          || movie.description.toLowerCase()\n            .includes(action.query)\n        )),\n      };\n    \n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.pageNumber,\n      };\n    \n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;","import data from './movies.json';\n\nconst URL_API = 'https://www.omdbapi.com/';\n\nexport function getMovie(title) {\n  return fetch(`${URL_API}?apikey=d905f6c1&t=${title}`)\n    .then(response => response.json());\n}\n\nexport const defaultMovies = data;\n\nconsole.log(defaultMovies);\n","import React, { useState } from 'react';\nimport './MovieCard.scss';\nimport CN from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { actions } from \"../../redux/store\";\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n  imdbId,\n}) => {\n  const [details, setDetails] = useState(false);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"card\">\n      <div className={CN('card__container', {\n        'is-flipped': details,\n      })}>\n        <figure className=\"card__face card__face--front \">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n            className=\"card__image\"\n          />\n        </figure>\n\n        <div className=\"card__face card__face--back \">\n          <div className=\"media-content\">\n            <p className=\"title\">{title}</p>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"card__content\">\n        <div className=\"card__content--buttons\">\n          <button\n            type=\"button\"\n            className=\"card__content--button\"\n            onClick={() => {setDetails(!details)}}\n          >\n            Show more\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"card__content--button\"\n            onClick={() => {\n              dispatch(actions.deleteMovie(imdbId))\n            }}\n          >\n            Delete film\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n    <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport CN from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Loader } from '../Loader';\n// import { useDispatch } from 'react-redux';\n// import { addMovies } from '../../redux/store';\n\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  // const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [searchTitle, setSearchTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [canAddMovie, setCanAddMovie] = useState(false);\n\n  // useEffect(() => {\n    // setLoading(false);\n    // searchMovie(searchTitle);\n  // }, [loading]);\n\n  const searchMovie = async (title) => {\n    setLoading(true);\n    const movie = await getMovie(title);\n\n    if (movie.Response === 'False') {\n      setLoading(false);\n      setNotFound(true);\n      setShowPreview(false);\n      setCanAddMovie(false);\n      return;\n    }\n\n    setFoundMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    });\n    \n    setLoading(false);\n    setNotFound(false);\n    setShowPreview(true);\n    setCanAddMovie(true);\n  };\n\n  return (\n    <div className=\"finder\">\n      <form\n        className=\"finder__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          searchMovie(searchTitle);\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"finder__field\">\n          <label\n            className=\"finder__label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n          </label>\n\n          <div className=\"finder__control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search...\"\n              className={CN({\n                finder__input: true,\n                \"finder__input--is-danger\": notFound,\n              })}\n              value={searchTitle}\n              onChange={(event) => {\n                setSearchTitle(event.target.value);\n                setNotFound(false);\n              }}\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"finder__help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"finder__field finder__field--is-grouped\">\n          <div className=\"finder__control\">\n            <button\n              type=\"submit\"\n              className=\"finder__button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"finder__control\">\n            <button\n              type=\"button\"\n              className=\"finder__button is-primary\"\n              disabled={!canAddMovie}\n              onClick={() => {\n                addMovie(foundMovie);\n                setLoading(false);\n                setShowPreview(false);\n                setCanAddMovie(false);\n                setSearchTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {showPreview && (\n        <div className=\"container\">\n          <h2 className=\"container__title\">Preview</h2>\n            {loading ? (\n              <Loader />\n            ) : (\n              <MovieCard {...foundMovie} />\n            )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './FilterMovie.scss';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/store';\n\nexport const FilterMovie = ({ filterMovies }) => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const action = actions.filterMovies(query);\n    dispatch(action);\n  }, [query]);\n\n  // useEffect(() => {\n  //   filterMovies(query);\n  // }, [query]);\n\n  return (\n    <div className=\"header\">\n        <div className=\"header__menu\">\n          <label\n            htmlFor=\"search-query\"\n            className=\"header__label\"\n          >\n            Search movie {query}\n          </label>\n\n          <div className=\"header__control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"header__input\"\n              placeholder=\"Search...\"\n              autoComplete=\"off\"\n              value={query}\n              onChange={(event) => {setQuery(event.target.value)}}\n            />\n          </div>\n        </div>\n      </div>\n  );\n}\n","import React from 'react';\nimport { useSelector} from 'react-redux';\nimport { selectors } from '../../redux/store';\nimport './Pagination.scss';\nimport CN from 'classnames';\n\nexport const Pagination = ({\n  moviesPerPage,\n  totalMovies,\n  paginate\n}) => {\n  const currentPage = useSelector(selectors.getCurrentPage);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalMovies / moviesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <nav className=\"pagination__nav\">\n        <div className=\"pagination__pages\">\n          {pageNumbers.map((page) => (\n            <span\n              key={page}\n              className={CN(\"pagination__page\", {\n                \"pagination__current-page\":\n                  currentPage === page,\n              })}\n              onClick={() => paginate(page)}\n            >\n              {page}\n            </span>\n          ))}\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions, selectors } from './redux/store';\n\nimport { defaultMovies } from './api/api';\nimport { MoviesList } from './components/MoviesList'\nimport { FindMovie } from './components/FindMovie';\nimport { FilterMovie } from './components/FilterMovie';\nimport { Loader } from './components/Loader';\nimport { Pagination } from \"./components/Pagination\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const movies = useSelector(selectors.getMovies);\n  const loading = useSelector(selectors.getLoading);\n  const currentPage = useSelector(selectors.getCurrentPage);\n  const moviesPerPage = useSelector(selectors.getMoviesPerPage);\n  const totalMovies = useSelector(selectors.getTotalMovies);\n\n  useEffect(() => {\n    const fetchMovies = async() => {\n      dispatch(actions.setMovies(defaultMovies));\n      dispatch(actions.setLoading(false));\n    }\n\n    fetchMovies();\n  }, []);\n\n  const filterMovies = (query) => {\n    const action = actions.filterMovies(query);\n    dispatch(action);\n  };\n\n  const addMovie = (newMovie) => {\n    if (movies.some((movie) =>\n      movie.imdbId === newMovie.imdbId\n    )) {\n      return;\n    }\n\n    dispatch(actions.addMovie(newMovie));\n  };\n\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n\n  const paginate = pageNumber => dispatch(\n    actions.setCurrentPage(pageNumber)\n  );\n\n  return (\n    <>\n      <FilterMovie filterMovies={filterMovies} />\n\n      <div className=\"page\">\n        <div className=\"page__content\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <MoviesList movies={currentMovies} />\n            )}\n          <div className=\"page__pagination\">\n            <Pagination\n              moviesPerPage={moviesPerPage}\n              totalMovies={totalMovies}\n              paginate={paginate}\n            />\n          </div>\n        </div>\n\n        <div className=\"page__sidebar\">\n          <FindMovie addMovie={addMovie} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport { App } from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}